openapi: 3.0.0
info:
  version: "1.0.0"
  title: stack-overfaux
  description: The API for interacting with StackOverfaux
paths:
  /users:
    get:
      tags:
        - Users
      description: returns all registered users
      responses:
        '200':
          description: List of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /users/{name}:
    post:
      tags:
        - Users
      description: Creates new user
      parameters:
        - name: 'name'
          in: path
          required: true
          schema:
            type: 'string'
      responses:
        '201':
          description: successfully registered user
          
    get:
      tags:
        - Users
      description: Gets a user by name
      parameters:
        - name: 'name'
          in: path
          required: true
          schema:
            type: 'string'
      responses:
        '200':
          description: Successfully returned user
    delete:
      tags:
        - Users
      description: Deletes a user by name, along with all of their comments, questions, and answers
      parameters:
        - name: 'name'
          in: path
          required: true
          schema:
            type: 'string'
      responses:
        '200':
          description: Successfully deleted user
          
  /questions:
    get:
      tags:
        - Questions
      description: Gets all questions with optional filtering
      parameters:
        - name: 'id'
          in: query
          required: false
          schema:
            type: integer
          description: Filter by question ID
        - name: 'user'
          in: query
          required: false
          schema:
            type: string
          description: Filter by username
      responses:
        '200':
          description: Successfully returned questions
    post:
      tags:
        - Questions
      description: Create new question
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - body
                - user_name
              properties:
                title:
                  type: string
                body:
                  type: string
                user_name:
                  type: string
      responses:
        '201':
          description: Successfully returned question

  /questions/{id}:
      delete:
      tags:
        - Questions
      description: Deletes a question by ID, along with all of its comments and answers
      parameters:
        - name: 'id'
          in: path
          required: true
          schema:
            type: 'integer'
      responses:
        '200':
          description: Successfully deleted question

  /answers:
    get:
      tags:
        - Answers
      description: Gets all answers with optional filtering
      parameters:
        - name: 'id'
          in: query
          required: false
          schema:
            type: integer
          description: Filter by question ID
        - name: 'user'
          in: query
          required: false
          schema:
            type: string
          description: Filter by username
        - name: 'question'
          in: query
          required: false
          schema:
            type: integer
          description: Filter by question ID
      responses:
        '200':
          description: Successfully returned questions
    post:
      tags:
        - Answers
      description: Create new question
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - body
                - user_name
              properties:
                title:
                  type: string
                body:
                  type: string
                user_name:
                  type: string
      responses:
        '201':
          description: Successfully returned question
  /answers/{id}:
    delete:
      tags:
        - Answers
      description: Deletes an answer by ID, along with all of its comments
      parameters:
        - name: 'id'
          in: path
          required: true
          schema:
            type: 'integer'
      responses:
        '200':
          description: Successfully deleted answer


  /comments:
    get:
      tags:
        - Comments
      description: Gets all comments with optional filtering
      parameters:
        - name: 'user'
          in: query
          required: false
          schema:
            type: string
          description: Filter by username
        - name: 'parent'
          in: query
          required: false
          schema:
            type: integer
          description: Filter by parent ID (question or answer)
      responses:
        '200':
          description: Successfully returned questions
    post:
      tags:
        - Comments
      description: Create new question
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - body
                - user_name
              properties:
                title:
                  type: string
                body:
                  type: string
                user_name:
                  type: string
      responses:
        '201':
          description: Successfully returned question

  /comments/{id}:
    delete:
      tags:
        - Comments
      description: Deletes a comment by ID
      parameters:
        - name: 'id'
          in: path
          required: true
          schema:
            type: 'integer'
      responses:
        '200':
          description: Successfully deleted comment
